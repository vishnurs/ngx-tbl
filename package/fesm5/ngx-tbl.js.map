{"version":3,"file":"ngx-tbl.js.map","sources":["ng://ngx-tbl/ngx-tbl-column.component.ts","ng://ngx-tbl/ngx-tbl-component.ts","ng://ngx-tbl/ngx-tbl-control.ts","ng://ngx-tbl/ngx-tbl-pagination/ngx-tbl-pagination.ts","ng://ngx-tbl/ngx-tbl.module.ts"],"sourcesContent":["import { Directive, Input, ContentChild } from '@angular/core';\n\n@Directive({\n  selector: 'ngx-tbl-column'\n})\n\nexport class NgxTblColumn {\n  @Input() name: string;\n  @Input() key: string;\n  @Input() sortable: string;\n  @Input() narrow: boolean;\n\n  @ContentChild('ngxTblCellTemplate') cellTemplate: any;\n}","import {\n  Component, ViewChild, Input,\n  Output, EventEmitter, ContentChildren, QueryList\n} from '@angular/core'\nimport { Subject } from 'rxjs/Subject'\nimport { Observable } from 'rxjs/Observable';\nimport { NgxTblColumn } from './ngx-tbl-column.component';\nimport { debounceTime, map } from 'rxjs/operators'\n\nimport * as _ from 'lodash';\nexport interface itm {\n  rows?: any[];\n  total: number;\n}\n@Component({\n  selector: 'ngx-tbl',\n  template: `\n  <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th *ngFor=\"let column of columns\" [ngClass]=\"{'col-sort-asc': sort[column.key] == 1, 'col-sort-desc': sort[column.key] == 0, \n      'col-sort': (column.sortable && (sort[column.key] != 0 || sort[column.key] != 1)), 'narrow':column.narrow }\" (click)=\"sortColumn(column)\">\n      {{column.name}}\n      </th>\n      <th class=\"col-action\" *ngIf=\"!config.allowAction || config.allowAction()\">Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of _items?.rows; let i = index;\">\n      <td *ngFor=\"let column of columns\">\n        <div *ngIf=\"!column.cellTemplate\">{{item[column.key]}}</div>\n        <div *ngIf=\"column.cellTemplate\" \n        [ngTemplateOutlet]=\"column.cellTemplate\" [ngTemplateOutletContext]=\"{item: item}\">\n        </div>\n      </td>\n      <td class=\"col-action\" *ngIf=\"!config.allowAction || config.allowAction()\">\n        <div class=\"btn-group\" dropdown>\n          <button id=\"button-basic\" dropdownToggle type=\"button\" class=\"btn dropdown-toggle\" *ngIf=\"config.showAction && config.showAction(item)\"\n                  aria-controls=\"dropdown-basic\">\n                  <i class=\"fa fa-cog\"></i>\n          </button>\n          <ul id=\"dropdown-basic\" class=\"dropdown-menu\">\n            <li *ngIf=\"!config.allowEdit || config.allowEdit(item)\" role=\"menuitem\"><a class=\"dropdown-item\" (click)=\"editRow(item, i)\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Edit</a></li>\n            <li *ngIf=\"!config.allowDelete || config.allowDelete(item)\" role=\"menuitem\"><a class=\"dropdown-item\" (click)=\"confirmDelete(item)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete</a></li>\n          </ul>\n        </div>    \n      </td>\n    </tr>\n    <tr *ngIf=\"_items?.total==0\">\n      <td [attr.colspan]=\"columns.length\" class=\"empty-ngx-table-msg\">No records found</td>\n    </tr>\n  </tbody>\n  \n</table>\n<ngx-tbl-pagination [total]=\"_items?.total\" [limit]=\"limit\" (page-change)=\"loadData($event)\" [reset-pagination]=\"resetPagination\"></ngx-tbl-pagination>\n  `\n})\nexport class NgxTblComponent {\n  _items: any;\n  limit: number = 10;\n  sort: any = {};\n  searchParam: string;\n  private subject = new Subject<any>();\n  resetPagination: Observable<any>;\n  private debouncer = new Subject();\n  private deleteRow: any;\n\n  @ViewChild('deleteConfirmModal') deleteConfirmModal: any;\n  @Input()\n  set items(items: any[]) {\n    this._items = items;\n  }\n  get items() {\n    return this._items;\n  }\n  @Input() config: any;\n  @Output() update: EventEmitter<any> = new EventEmitter<any>();\n  @Output() load: EventEmitter<any> = new EventEmitter<any>();\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n  @Output() add: EventEmitter<any> = new EventEmitter();\n  @Output() delete: EventEmitter<any> = new EventEmitter();\n  @ContentChildren(NgxTblColumn) columns: QueryList<NgxTblColumn>;\n\n  constructor() {\n    this.resetPagination = this.subject.asObservable();\n    this.debouncer.pipe(\n      debounceTime(300),\n      map(val => this.loadData()))\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  ngAfterViewInit() {\n    this.subject.next(true);\n  }\n\n  search() {\n    this.subject.next(true);\n    this.debouncer.next()\n  }\n\n  limitChange() {\n    this.subject.next(true);\n    this.loadData();\n  }\n\n  confirmDelete(item: any) {\n    this.deleteRow = item;\n    this.deleteConfirmModal.show();\n  }\n\n  deleteItem() {\n    this.delete.emit({ item: _.clone(this.deleteRow), tableParams: this.getQueryParams(1) });\n    this.deleteRow = {};\n    this.deleteConfirmModal.hide();\n    this.subject.next(true);\n  }\n\n  closeModal() {\n    this.deleteConfirmModal.hide();\n  }\n\n  editRow(item: any, index: any) {\n    this.edit.emit({ item: _.clone(item), tableParams: this.getQueryParams(1) });\n    this.subject.next(true);\n  }\n\n  addNew() {\n    this.add.emit({ tableParams: this.getQueryParams(1) });\n    this.subject.next(true);\n  }\n\n  getQueryParams(currentPage: any) {\n    //this.pageNo = currentPage;\n    return { search: this.searchParam || '', limit: this.limit, skip: (currentPage - 1) * this.limit, sort: this.sort };\n  }\n\n  loadData(currentPage: number = 1) {\n    this.load.emit(this.getQueryParams(currentPage));\n  }\n\n  sortColumn(column: any) {\n    if (column.sortable) {\n      if (_.get(this.sort, column.key) == 0) {\n        this.sort = {};\n        this.sort[column.key] = 1\n      } else if (_.get(this.sort, column.key) == 1) {\n        this.sort = {};\n        this.sort[column.key] = 0;\n      } else {\n        this.sort = {};\n        this.sort[column.key] = 1;\n      }\n      this.loadData(); //this.pageNo\n    }\n  }\n}","import { Directive, Output, Input, ElementRef, Renderer2,\n  Attribute } from '@angular/core';\n import { FormControl, ControlContainer, \n   FormGroupDirective, Validators } from '@angular/forms';\n \n @Directive({\n   selector: '[formControlName][ngx-tbl-control]',\n })\n \n export class NgxTblControl {\n   @Input('validators') validators: any;\n   private form: any;\n   constructor(private container: ControlContainer, @Attribute('formControlName') private name: any, \n   @Attribute('validation') validation: any, private renderer: Renderer2, private el: ElementRef) {\n     this.form = (this.container as FormGroupDirective).form;\n     this.form.removeControl(this.name);\n     if (!this.form.get(this.name)) {\n       this.form.addControl(this.name, new FormControl(''));\n     }\n   }\n }","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { tap } from 'rxjs/operators';\n\nimport * as _ from 'lodash';\ndeclare var parseInt: any\ndeclare var Math: any\n@Component({\n  selector: 'ngx-tbl-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    .pagination { float: right; margin:0 0 7px 0; }\n    .pagination li{cursor:pointer;}\n    .paging-info {font-style: italic;color: #808080;line-height: 2;}\n  `],\n  template: `\n  <div class=\"col-md-3 col-xs-3 col-lg-3 col-sm-3 paging-info\" *ngIf=\"total\">\n    <span>showing {{this.pager.startIndex+1}} to {{this.pager.endCount}} of {{total}}</span>\n  </div>\n  <div class=\"col-md-9 col-xs-9 col-lg-9 col-sm-9\">\n  <ul *ngIf=\"pager.pages && pager.pages.length\" class=\"pagination\">\n    <li [ngClass]=\"{disabled:pager.currentPage === 1}\">\n        <a (click)=\"setPage(1)\">First</a>\n    </li>\n    <li [ngClass]=\"{disabled:pager.currentPage === 1}\">\n        <a (click)=\"setPage(pager.currentPage - 1)\">Prev</a>\n    </li>\n    <li *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage === page}\">\n        <a (click)=\"setPage(page)\">{{page}}</a>\n    </li>\n    <li [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\n        <a (click)=\"setPage(pager.currentPage + 1)\">Next</a>\n    </li>\n    <li [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\n        <a (click)=\"setPage(pager.totalPages)\">Last</a>\n    </li>\n  </ul>\n  </div>\n  `\n})\n\nexport class NgxTblPagination {\n  @Input('reset-pagination') resetPagination: any;\n  @Input('total') total: any;\n  @Input() limit: any;\n  @Output('page-change') pageChanged = new EventEmitter();\n  private reset: boolean = true;\n  pager: any = {};\n\n  setPage(page: number) {\n    if (page < 1 || page > this.pager.totalPages) {\n      return;\n    }\n    this.pageChanged.emit(page);\n    this.pager = this.getPager(this.total, page, _.toNumber(this.limit));\n  }\n  \n  constructor() {\n  }\n\n  ngOnInit() {\n    this.resetPagination.subscribe(() => {\n      this.reset = true;\n    })\n  }\n\n  ngOnChanges(changes: any) {\n    this.limit = parseInt(this.limit);\n    if (this.total >= 0 && this.reset) {\n      this.reset = false;\n      this.pager = this.getPager(this.total, 1, _.toNumber(this.limit));\n    }\n  }\n\n  getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\n    let totalPages = Math.ceil(totalItems / pageSize);\n    let startPage: number, endPage: number;\n    if (totalPages <= 10) {\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    let startIndex = (currentPage - 1) * pageSize;\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    let pages = _.range(startPage, endPage + 1);\n\n    let endCount = startIndex + this.limit;\n    if (endCount > this.total) { endCount = this.total }\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages,\n      endCount: endCount\n    };\n  }\n}","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n\nimport { NgxTblComponent } from './ngx-tbl-component';\nimport { NgxTblColumn } from './ngx-tbl-column.component';\nimport { NgxTblControl } from './ngx-tbl-control';\nimport { NgxTblPagination } from './ngx-tbl-pagination/ngx-tbl-pagination';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgxTblComponent,\n    NgxTblColumn,\n    NgxTblControl,\n    NgxTblPagination\n  ],\n  exports: [ \n    NgxTblComponent,\n    NgxTblColumn,\n    NgxTblControl\n  ]\n})\n\nexport class NgxTblModule {\n  \n}"],"names":["_.clone","_.get","_.toNumber","_.range"],"mappings":"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"}
