!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("rxjs/Subject"),require("rxjs/operators"),require("lodash"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-tbl",["exports","@angular/core","rxjs/Subject","rxjs/operators","lodash","@angular/forms","@angular/common"],e):e(t["ngx-tbl"]={},t.ng.core,t.rxjs.Subject,t.rxjs.operators,t._,t.ng.forms,t.ng.common)}(this,function(t,n,o,i,g,a,e){"use strict";var r=function(){function t(){}return t.decorators=[{type:n.Directive,args:[{selector:"ngx-tbl-column"}]}],t.propDecorators={name:[{type:n.Input}],key:[{type:n.Input}],sortable:[{type:n.Input}],narrow:[{type:n.Input}],cellTemplate:[{type:n.ContentChild,args:["ngxTblCellTemplate"]}]},t}(),s=function(){function t(){var e=this;this.limit=10,this.sort={},this.subject=new o.Subject,this.debouncer=new o.Subject,this.update=new n.EventEmitter,this.load=new n.EventEmitter,this.edit=new n.EventEmitter,this.add=new n.EventEmitter,this["delete"]=new n.EventEmitter,this.resetPagination=this.subject.asObservable(),this.debouncer.pipe(i.debounceTime(300),i.map(function(t){return e.loadData()}))}return Object.defineProperty(t.prototype,"items",{get:function(){return this._items},set:function(t){this._items=t},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.loadData()},t.prototype.ngAfterViewInit=function(){this.subject.next(!0)},t.prototype.search=function(){this.subject.next(!0),this.debouncer.next()},t.prototype.limitChange=function(){this.subject.next(!0),this.loadData()},t.prototype.confirmDelete=function(t){this.deleteRow=t,this.deleteConfirmModal.show()},t.prototype.deleteItem=function(){this["delete"].emit({item:g.clone(this.deleteRow),tableParams:this.getQueryParams(1)}),this.deleteRow={},this.deleteConfirmModal.hide(),this.subject.next(!0)},t.prototype.closeModal=function(){this.deleteConfirmModal.hide()},t.prototype.editRow=function(t,e){this.edit.emit({item:g.clone(t),tableParams:this.getQueryParams(1)}),this.subject.next(!0)},t.prototype.addNew=function(){this.add.emit({tableParams:this.getQueryParams(1)}),this.subject.next(!0)},t.prototype.getQueryParams=function(t){return{search:this.searchParam||"",limit:this.limit,skip:(t-1)*this.limit,sort:this.sort}},t.prototype.loadData=function(t){void 0===t&&(t=1),this.load.emit(this.getQueryParams(t))},t.prototype.sortColumn=function(t){t.sortable&&(0==g.get(this.sort,t.key)?(this.sort={},this.sort[t.key]=1):1==g.get(this.sort,t.key)?(this.sort={},this.sort[t.key]=0):(this.sort={},this.sort[t.key]=1),this.loadData())},t.decorators=[{type:n.Component,args:[{selector:"ngx-tbl",template:'\n  <table class="table table-striped">\n  <thead>\n    <tr>\n      <th *ngFor="let column of columns" [ngClass]="{\'col-sort-asc\': sort[column.key] == 1, \'col-sort-desc\': sort[column.key] == 0, \n      \'col-sort\': (column.sortable && (sort[column.key] != 0 || sort[column.key] != 1)), \'narrow\':column.narrow }" (click)="sortColumn(column)">\n      {{column.name}}\n      </th>\n      <th class="col-action" *ngIf="!config.allowAction || config.allowAction()">Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor="let item of _items?.rows; let i = index;">\n      <td *ngFor="let column of columns">\n        <div *ngIf="!column.cellTemplate">{{item[column.key]}}</div>\n        <div *ngIf="column.cellTemplate" \n        [ngTemplateOutlet]="column.cellTemplate" [ngTemplateOutletContext]="{item: item}">\n        </div>\n      </td>\n      <td class="col-action" *ngIf="!config.allowAction || config.allowAction()">\n        <div class="btn-group" dropdown>\n          <button id="button-basic" dropdownToggle type="button" class="btn dropdown-toggle" *ngIf="config.showAction && config.showAction(item)"\n                  aria-controls="dropdown-basic">\n                  <i class="fa fa-cog"></i>\n          </button>\n          <ul id="dropdown-basic" class="dropdown-menu">\n            <li *ngIf="!config.allowEdit || config.allowEdit(item)" role="menuitem"><a class="dropdown-item" (click)="editRow(item, i)"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a></li>\n            <li *ngIf="!config.allowDelete || config.allowDelete(item)" role="menuitem"><a class="dropdown-item" (click)="confirmDelete(item)"><i class="fa fa-trash" aria-hidden="true"></i> Delete</a></li>\n          </ul>\n        </div>    \n      </td>\n    </tr>\n    <tr *ngIf="_items?.total==0">\n      <td [attr.colspan]="columns.length" class="empty-ngx-table-msg">No records found</td>\n    </tr>\n  </tbody>\n  \n</table>\n<ngx-tbl-pagination [total]="_items?.total" [limit]="limit" (page-change)="loadData($event)" [reset-pagination]="resetPagination"></ngx-tbl-pagination>\n  '}]}],t.ctorParameters=function(){return[]},t.propDecorators={deleteConfirmModal:[{type:n.ViewChild,args:["deleteConfirmModal"]}],items:[{type:n.Input}],config:[{type:n.Input}],update:[{type:n.Output}],load:[{type:n.Output}],edit:[{type:n.Output}],add:[{type:n.Output}],"delete":[{type:n.Output}],columns:[{type:n.ContentChildren,args:[r]}]},t}(),l=function(){function t(t,e,n,o,i){this.container=t,this.name=e,this.renderer=o,this.el=i,this.form=this.container.form,this.form.removeControl(this.name),this.form.get(this.name)||this.form.addControl(this.name,new a.FormControl(""))}return t.decorators=[{type:n.Directive,args:[{selector:"[formControlName][ngx-tbl-control]"}]}],t.ctorParameters=function(){return[{type:a.ControlContainer},{type:undefined,decorators:[{type:n.Attribute,args:["formControlName"]}]},{type:undefined,decorators:[{type:n.Attribute,args:["validation"]}]},{type:n.Renderer2},{type:n.ElementRef}]},t.propDecorators={validators:[{type:n.Input,args:["validators"]}]},t}(),c=function(){function t(){this.pageChanged=new n.EventEmitter,this.reset=!0,this.pager={}}return t.prototype.setPage=function(t){t<1||t>this.pager.totalPages||(this.pageChanged.emit(t),this.pager=this.getPager(this.total,t,g.toNumber(this.limit)))},t.prototype.ngOnInit=function(){var t=this;this.resetPagination.subscribe(function(){t.reset=!0})},t.prototype.ngOnChanges=function(t){this.limit=parseInt(this.limit),0<=this.total&&this.reset&&(this.reset=!1,this.pager=this.getPager(this.total,1,g.toNumber(this.limit)))},t.prototype.getPager=function(t,e,n){void 0===e&&(e=1),void 0===n&&(n=10);var o,i,a=Math.ceil(t/n);a<=10?(o=1,i=a):e<=6?(o=1,i=10):a<=e+4?(o=a-9,i=a):(o=e-5,i=e+4);var r=(e-1)*n,s=Math.min(r+n-1,t-1),l=g.range(o,i+1),c=r+this.limit;return c>this.total&&(c=this.total),{totalItems:t,currentPage:e,pageSize:n,totalPages:a,startPage:o,endPage:i,startIndex:r,endIndex:s,pages:l,endCount:c}},t.decorators=[{type:n.Component,args:[{selector:"ngx-tbl-pagination",changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["\n    .pagination { float: right; margin:0 0 7px 0; }\n    .pagination li{cursor:pointer;}\n    .paging-info {font-style: italic;color: #808080;line-height: 2;}\n  "],template:'\n  <div class="col-md-3 col-xs-3 col-lg-3 col-sm-3 paging-info" *ngIf="total">\n    <span>showing {{this.pager.startIndex+1}} to {{this.pager.endCount}} of {{total}}</span>\n  </div>\n  <div class="col-md-9 col-xs-9 col-lg-9 col-sm-9">\n  <ul *ngIf="pager.pages && pager.pages.length" class="pagination">\n    <li [ngClass]="{disabled:pager.currentPage === 1}">\n        <a (click)="setPage(1)">First</a>\n    </li>\n    <li [ngClass]="{disabled:pager.currentPage === 1}">\n        <a (click)="setPage(pager.currentPage - 1)">Prev</a>\n    </li>\n    <li *ngFor="let page of pager.pages" [ngClass]="{active:pager.currentPage === page}">\n        <a (click)="setPage(page)">{{page}}</a>\n    </li>\n    <li [ngClass]="{disabled:pager.currentPage === pager.totalPages}">\n        <a (click)="setPage(pager.currentPage + 1)">Next</a>\n    </li>\n    <li [ngClass]="{disabled:pager.currentPage === pager.totalPages}">\n        <a (click)="setPage(pager.totalPages)">Last</a>\n    </li>\n  </ul>\n  </div>\n  '}]}],t.ctorParameters=function(){return[]},t.propDecorators={resetPagination:[{type:n.Input,args:["reset-pagination"]}],total:[{type:n.Input,args:["total"]}],limit:[{type:n.Input}],pageChanged:[{type:n.Output,args:["page-change"]}]},t}(),p=function(){function t(){}return t.decorators=[{type:n.NgModule,args:[{imports:[e.CommonModule],declarations:[s,r,l,c],exports:[s,r,l]}]}],t}();t.NgxTblModule=p,t.NgxTblControl=l,t.NgxTblColumn=r,t.NgxTblPagination=c,t.NgxTblComponent=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-tbl.umd.min.js.map